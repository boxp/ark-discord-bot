apiVersion: apps/v1
kind: Deployment
metadata:
  name: ark-discord-bot
  namespace: ark-discord-bot
  labels:
    app: ark-discord-bot
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ark-discord-bot
  template:
    metadata:
      labels:
        app: ark-discord-bot
    spec:
      serviceAccountName: ark-discord-bot
      containers:
      - name: ark-discord-bot
        image: ark-discord-bot:latest
        imagePullPolicy: IfNotPresent
        envFrom:
        - configMapRef:
            name: ark-discord-bot-config
        - secretRef:
            name: ark-discord-bot-secret
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          exec:
            command:
            - python
            - -c
            - "import asyncio; print('Bot is running')"
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 10
        readinessProbe:
          exec:
            command:
            - python
            - -c
            - "import asyncio; print('Bot is running')"
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
        securityContext:
          runAsNonRoot: true
          runAsUser: 10000
          runAsGroup: 10000
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: logs
          mountPath: /app/logs
      volumes:
      - name: tmp
        emptyDir: {}
      - name: logs
        emptyDir: {}
      restartPolicy: Always
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ark-discord-bot
  namespace: ark-discord-bot
  labels:
    app.kubernetes.io/name: ark-discord-bot
    app.kubernetes.io/instance: production
    app.kubernetes.io/component: service-account

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: ark-discord-bot
  namespace: ark-survival-ascended
  labels:
    app.kubernetes.io/name: ark-discord-bot
    app.kubernetes.io/instance: production
    app.kubernetes.io/component: rbac
rules:
# Allow bot to manage ARK server deployments
- apiGroups: ["apps"]
  resources: ["deployments"]
  verbs: ["get", "list", "patch", "update"]
  resourceNames: ["ark-server"]  # Restrict to specific deployment
# Allow bot to read pod status
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "list"]
# Allow bot to read services for RCON connectivity
- apiGroups: [""]
  resources: ["services"]
  verbs: ["get", "list"]
  resourceNames: ["ark-server-service"]  # Restrict to specific service

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: ark-discord-bot
  namespace: ark-survival-ascended
  labels:
    app.kubernetes.io/name: ark-discord-bot
    app.kubernetes.io/instance: production
    app.kubernetes.io/component: rbac
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: ark-discord-bot
subjects:
- kind: ServiceAccount
  name: ark-discord-bot
  namespace: ark-discord-bot